generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
}

enum doctorsRole {
  admin
  doctor
  visitor
}

enum sweetEatingLevel {
  low
  medium
  high
  no
}

model Doctors {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  email        String @unique
  phone        String
  name         String
  profileImage String
  gender       Gender

  specialization    String?
  yearsOfExperience Int?        @default(0)
  bio               String?
  role              doctorsRole @default(doctor)
  address           String?
  password          String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isPending Boolean?   @default(true)
  Services  Services[]
}

model Patient {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String    @unique
  phone1      String
  phone2      String?
  dateOfBirth DateTime?
  gender      Gender
  address     String?
  reference   String?
  occupation  String

  password String

  treatmentNotes String
  // appointmentHistory Json[]
  majorDisease   String[]

  regularBrushingTime Int              @default(1)
  brushingMaterials   String
  sweetEatingLevel    sweetEatingLevel @default(no)

  examination String[]
  problems    String

  treatmentPlan    String?
  treatmentNote    String?
  drugHistory      String?
  treatmentDetails PatientSchedule[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PatientSchedule {
  id               String   @id @map("_id")
  date             DateTime
  treatmentNote    String
  paidToday        Int
  balanceRemaining Int
  next_Rx_plan     String?

  clientsId String?  @db.ObjectId
  Clients   Patient? @relation(fields: [clientsId], references: [id])
}

model Services {
  id          String @id @map("_id")
  name        String
  description String
  content     String
  coverImage  String

  icons       String?
  YT_VideoUrl String?
  price_range String?
  tags        String[]
  isPaused    Boolean? @default(false)

  doctorsId String  @db.ObjectId
  Author    Doctors @relation(fields: [doctorsId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id          String   @id @map("_id")
  amount      Float
  date        DateTime
  description String?
  category    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
